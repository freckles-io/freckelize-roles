---
# tasks file for dotfiles
- name: check required executables
  required_executable_facts:
    executables_to_check:
      - git
      - nix-env
      - conda
      - brew
      - stow

# install the default package manager now in case git is missing
- name: install homebrew package manager if needed for installing 'git'
  include_role:
    name: geerlingguy.homebrew
  vars:
    homebrew_cask_apps: []
  when: '("git" in freckles_executables_missing) and ((bootstrap_pkg_mgr is defined and bootstrap_pkg_mgr == "homebrew") or (ansible_os_family == "Darwin" and bootstrap_pkg_mgr is not defined) )'

- name: install nix package manager if needed for installing 'git'
  include_role:
    name: makkus.install-nix
  when: "bootstrap_pkg_mgr is defined and bootstrap_pkg_mgr == nix and 'git' in freckles_executables_missing"

- name: install conda package manager if needed for installing 'git'
  include_role:
    name: makkus.install-conda
  when: "bootstrap_pkg_mgr is defined and bootstrap_pkg_mgr == conda and 'git' in freckles_executables_missing"

- name: install git
  install:
    packages: git
    pkg_mgr: "{{ bootstrap_pkg_mgr | default('auto') }}"
  when: "'git' in freckles_executables_missing"

- name: checkout freckles repo(s)
  git:
    dest: "{{ item.dest }}"
    repo: "{{ item.repo }}"
  with_items:
    - "{{ freckles_repos | git_repo_filter }}"

- name: finding freckles folders
  freckles_facts:
    freckles_repos: "{{ freckles_repos | git_repo_filter }}"
    #freckles_profiles: "{{ freckles_profiles | ensure_list_filter }}"

# can only do that on the controller, because dependency requirements
- name: processing freckles folders
  set_fact:
    freckles_folders_metadata: "{{ freckles_folders_raw | frklize_folders_metadata_filter }}"

- name: retrieving freckles facts
  freckles_facts:
    freckles_folders_metadata: "{{ freckles_folders_metadata }}"

- name: augmenting freckles profile metadata
  set_fact:
    freckles_metadata: "{{ freckles_folders_metadata | freckles_augment_filter(freckles_profiles_metadata) }}"

- name: calculating package list
  set_fact:
    freckles_packages: "{{ freckles_metadata | create_package_list_filter }}"

- name: auto-detect package managers
  set_fact:
    freckles_additional_package_managers: "{{ freckles_packages | pkg_mgr_filter }}"

# this doesn't work, bug in ansible, for now installing roles manually one by one
# - name: ensure all package managers are installed
#   include_role:
#     name: "{{ item }}"
#   with_items:
#     - "{{ dotfiles_repos | pkg_mgr_filter('install-') }}"

- name: install nix
  include_role:
    name: makkus.install-nix
  when: '("nix" in freckles_additional_package_managers) and ( "nix-env" in freckles_executables_missing )'

- name: install conda
  include_role:
    name: makkus.install-conda
  when: '("conda" in freckles_additional_package_managers) and ( "conda" in freckles_executables_missing )'

- name: install homebrew
  include_role:
    name: geerlingguy.homebrew
  vars:
    homebrew_cask_apps: []
  when: '("brew" in freckles_executables_missing) and (("homebrew" in freckles_additional_package_managers and ansible_os_family == "Darwin") or (ansible_os_family == "Darwin" and pkg_mgr is not defined) )'

- name: install repo packages
  install:
    packages: "{{ item }}"
    # pkg_mgr: "{{ item.pkg_mgr }}"
  ignore_errors: "{{ ignore_errors | default(true) }}"
  with_items:
    - "{{ freckles_packages }}"

# - include: dotfiles.yml
  # when: "'dotfiles' in freckles_types"

# - include: python-dev-env.yml
  # when: "'python-dev-env' in freckles_types"
